{"name":"GitCE","tagline":"A tool for extracting git merge conflicts","body":"GitCE\r\n============\r\n\r\nGitCE is a groovy project that uses Gremlin Graph Traversal language to query a Neo4j database \r\nwhich contains metadata about project repositories hosted at GitHub. It takes as input the directory \r\npath to the graph database and outputs a list of all the merge commits that happened in the database\r\nhistory. Each item of this list contains the merge commit SHA-1 and their parents SHA-1. \r\nThe output list is structured in the following manner:\r\n\r\nMergeCommit1, Parent1, Parent2\r\n\r\n...\r\n\r\nMergeCommitN, Parent1, Parent2\r\n\r\n\r\nCurrently, the project saves the output list in a .csv file.\r\nTo run this project, you need the following instructions:\r\n\r\n1- Clone and run Gitminer (https://github.com/pridkett/gitminer), according with their instructions to \r\ndownload the database containing the desired projects metadata. \r\n\r\n2- Once you have the graph.db folder in your computer, clone or download the GitCE project\r\n\r\n3- Run 'mvn eclipse:clean' to download the project's dependencies. \r\n\r\n4- Import the project into eclipse using \"Import > Maven > Existing project into workspace...\"  \r\n\r\n5- In projects.csv put details about projects that you want to analyse.\r\n\r\n6- Run App.groovy, you may chose between some running options in this file. A .csv file will be created in the directory where you cloned the GitCE project.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}